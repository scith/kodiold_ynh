#!/bin/bash
set -e
app=kodi

# Source app helpers
	source /usr/share/yunohost/helpers

# Retrieve arguments
	domain=$1
	path=${2%/}

# Check domain/path availability
	sudo yunohost app checkurl $domain$path -a $app \
		|| (echo "Path not available: $domain$path" && exit 1)

# Check port availability
	sudo yunohost app checkport 8066
	if [[ ! $? -eq 0 ]]; then
	  exit 1
	fi
	
# Install Kodi
	sudo cp ../conf/kodi.list /etc/apt/sources.list.d/${app}.list
	ynh_package_update
	ynh_package_install kodi
	
# Make app dir?
	# Move userdata folder to yunohost.app
	
# MySQL?
	# dbname=${app}
	# dbuser=${app}
	# dbpass=$(ynh_string_random)
	# ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"
	# ynh_app_setting_set "${app}" mysqlpwd "$dbpass"

# Activate service and start on boot
	sudo cp ../conf/kodi.service /etc/systemd/system/${app}.service
	sudo yunohost service add $app --log /var/log/$app.log
	sudo yunohost service enable $app
	sudo yunohost service start $app

# Activate and forward the web interface
	sudo cp ../conf/advancedsettings.xml /usr/share/kodi/userdata/advancedsettings.xml

# Modify Nginx configuration file and copy it to Nginx conf directory
	sed -i "s@YNH_WWW_PATH@$path@g" ../conf/nginx.conf
	sudo cp ../conf/nginx.conf /etc/nginx/conf.d/${domain}.d/${app}.conf

# Restart services
	sudo service nginx reload || true
	
# Trap
	function exit_properly
	{
		set +e
		# Stop Kodi and remove service
			sudo yunohost service stop $app
			sudo yunohost service disable $app
			sudo yunohost service remove $app
			sudo rm /etc/systemd/system/$app.service
		# Uninstall Kodi
			ynh_package_remove kodi
			sudo rm /etc/apt/sources.list.d/${app}.list
		# Remove DB
			#ynh_mysql_drop_db "$dbname" 2>/dev/null || true
			#ynh_mysql_drop_user "$dbuser" 2>/dev/null || true
		# Remove Nginx
			sudo rm -f "/etc/nginx/conf.d/${domain}.d/${app}.conf"
		# Reload
			sudo service nginx reload || true
		exit 1
	}
	trap exit_properly ERR
